{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nclass AppointmentService {\n  constructor(formBuilder, http) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/appointments/'; // Replace with your server API URL\n  }\n\n  getDoctorsByDoctorName(doctorName) {\n    return this.http.get(`http://localhost:3000/doctors`);\n  }\n  getAvailableDoctors() {\n    return this.http.get('http://localhost:3000/appointments/doctor');\n  }\n  getAppointmentsByPatientId(patientId) {\n    const url = `${this.apiUrl}/${patientId}`;\n    return this.http.get(url);\n  }\n  getAppointmentsByDoctorName(doctorName) {\n    const url = `${this.apiUrl}doctor/${doctorName}`;\n    return this.http.get(url);\n  }\n  bookAppointment(appointment) {\n    return this.http.post(this.apiUrl, appointment);\n  }\n  getAllAppointments() {\n    return this.http.get(this.apiUrl);\n  }\n  approveAppointment(appointmentId) {\n    const url = `${this.apiUrl}/${appointmentId}/approve`;\n    return this.http.put(url, {});\n  }\n  updateAppointmentStatus(appointmentId, status) {\n    const url = `${this.apiUrl}/${appointmentId}/approve`;\n    const body = {\n      status: status\n    };\n    return this.http.put(url, body);\n  }\n}\nAppointmentService.ɵfac = function AppointmentService_Factory(t) {\n  return new (t || AppointmentService)(i0.ɵɵinject(i1.FormBuilder), i0.ɵɵinject(i2.HttpClient));\n};\nAppointmentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppointmentService,\n  factory: AppointmentService.ɵfac,\n  providedIn: 'root'\n});\nexport { AppointmentService };","map":{"version":3,"names":["AppointmentService","constructor","formBuilder","http","apiUrl","getDoctorsByDoctorName","doctorName","get","getAvailableDoctors","getAppointmentsByPatientId","patientId","url","getAppointmentsByDoctorName","bookAppointment","appointment","post","getAllAppointments","approveAppointment","appointmentId","put","updateAppointmentStatus","status","body","i0","ɵɵinject","i1","FormBuilder","i2","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\alpha-projection\\hospital-management-system\\hms\\client\\src\\app\\appointment.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Appointment } from './Appointment';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Doctor } from './appointment-booking/appointment-booking.component';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n\r\n  private apiUrl = 'http://localhost:3000/appointments/'; // Replace with your server API URL\r\n\r\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\r\n\r\n\r\n\r\n\r\n  getDoctorsByDoctorName(doctorName: string): Observable<string[]> {\r\n    return this.http.get<string[]>(`http://localhost:3000/doctors`);\r\n  }\r\n\r\n  getAvailableDoctors(): Observable<Doctor[]> {\r\n    return this.http.get<Doctor[]>('http://localhost:3000/appointments/doctor');\r\n  }\r\n\r\n  getAppointmentsByPatientId(patientId: string): Observable<Appointment[]> {\r\n    const url = `${this.apiUrl}/${patientId}`;\r\n    return this.http.get<Appointment[]>(url);\r\n  }\r\n\r\n\r\n  getAppointmentsByDoctorName(doctorName: string): Observable<Appointment[]> {\r\n    const url = `${this.apiUrl}doctor/${doctorName}`;\r\n    return this.http.get<Appointment[]>(url);\r\n  }\r\n\r\n  bookAppointment(appointment: Appointment) {\r\n    return this.http.post(this.apiUrl, appointment);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  getAllAppointments(): Observable<Appointment[]> {\r\n    return this.http.get<Appointment[]>(this.apiUrl);\r\n  }\r\n\r\n\r\n\r\n  approveAppointment(appointmentId: string): Observable<any> {\r\n    const url = `${this.apiUrl}/${appointmentId}/approve`;\r\n    return this.http.put(url, {});\r\n  }\r\n\r\n\r\n  updateAppointmentStatus(appointmentId: string, status: string): Observable<Appointment> {\r\n    const url = `${this.apiUrl}/${appointmentId}/approve`;\r\n    const body = { status: status };\r\n\r\n    return this.http.put<Appointment>(url, body);\r\n  }\r\n\r\n  // rejectAppointment(appointmentId: string): Observable<any> {\r\n  //   const url = `${this.apiUrl}/${appointmentId}/reject`;\r\n  //   return this.http.put(url, {});\r\n  // }\r\n}\r\n"],"mappings":";;;AAQA,MAGaA,kBAAkB;EAK7BC,YAAoBC,WAAwB,EAAUC,IAAgB;IAAlD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAFlD,KAAAC,MAAM,GAAG,qCAAqC,CAAC,CAAC;EAEkB;;EAK1EC,sBAAsBA,CAACC,UAAkB;IACvC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,+BAA+B,CAAC;EACjE;EAEAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACL,IAAI,CAACI,GAAG,CAAW,2CAA2C,CAAC;EAC7E;EAEAE,0BAA0BA,CAACC,SAAiB;IAC1C,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,IAAIM,SAAS,EAAE;IACzC,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAgBI,GAAG,CAAC;EAC1C;EAGAC,2BAA2BA,CAACN,UAAkB;IAC5C,MAAMK,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,UAAUE,UAAU,EAAE;IAChD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAgBI,GAAG,CAAC;EAC1C;EAEAE,eAAeA,CAACC,WAAwB;IACtC,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,IAAI,CAACX,MAAM,EAAEU,WAAW,CAAC;EACjD;EAMAE,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACb,IAAI,CAACI,GAAG,CAAgB,IAAI,CAACH,MAAM,CAAC;EAClD;EAIAa,kBAAkBA,CAACC,aAAqB;IACtC,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,IAAIc,aAAa,UAAU;IACrD,OAAO,IAAI,CAACf,IAAI,CAACgB,GAAG,CAACR,GAAG,EAAE,EAAE,CAAC;EAC/B;EAGAS,uBAAuBA,CAACF,aAAqB,EAAEG,MAAc;IAC3D,MAAMV,GAAG,GAAG,GAAG,IAAI,CAACP,MAAM,IAAIc,aAAa,UAAU;IACrD,MAAMI,IAAI,GAAG;MAAED,MAAM,EAAEA;IAAM,CAAE;IAE/B,OAAO,IAAI,CAAClB,IAAI,CAACgB,GAAG,CAAcR,GAAG,EAAEW,IAAI,CAAC;EAC9C;;AAtDWtB,kBAAkB,C;mBAAlBA,kBAAkB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,UAAA;AAAA;AAAlB5B,kBAAkB,C;SAAlBA,kBAAkB;EAAA6B,OAAA,EAAlB7B,kBAAkB,CAAA8B,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEP/B,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}