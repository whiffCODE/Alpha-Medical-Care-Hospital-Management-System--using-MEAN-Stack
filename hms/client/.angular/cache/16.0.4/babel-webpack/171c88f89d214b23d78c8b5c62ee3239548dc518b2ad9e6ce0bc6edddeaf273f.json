{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass PrescriptionService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n  }\n  getPatients() {\n    const url = `${this.apiUrl}/patients`; // Replace 'patients' with your patients endpoint\n    return this.http.get(url);\n  }\n  getDoctors() {\n    const url = `${this.apiUrl}/doctors`; // Replace 'doctors' with your doctors endpoint\n    return this.http.get(url);\n  }\n  createPrescription(prescriptionData) {\n    return this.http.post(`${this.apiUrl}/prescriptions`, prescriptionData);\n  }\n  getPrescriptionsByPatientName(patientName) {\n    const url = `${this.apiUrl}/prescriptions/patient/name/${patientName}`;\n    return this.http.get(url);\n  }\n}\nPrescriptionService.ɵfac = function PrescriptionService_Factory(t) {\n  return new (t || PrescriptionService)(i0.ɵɵinject(i1.HttpClient));\n};\nPrescriptionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PrescriptionService,\n  factory: PrescriptionService.ɵfac,\n  providedIn: 'root'\n});\nexport { PrescriptionService };","map":{"version":3,"names":["PrescriptionService","constructor","http","apiUrl","getPatients","url","get","getDoctors","createPrescription","prescriptionData","post","getPrescriptionsByPatientName","patientName","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\alpha-projection\\hospital-management-system\\hms\\client\\src\\app\\prescription.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Prescription } from './Prescription';\r\nimport { Patient } from './Patient';\r\nimport { Doctor } from './Doctor';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrescriptionService {\r\n  private apiUrl = 'http://localhost:3000';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPatients(): Observable<Patient[]> {\r\n    const url = `${this.apiUrl}/patients`; // Replace 'patients' with your patients endpoint\r\n    return this.http.get<Patient[]>(url);\r\n  }\r\n\r\n  getDoctors(): Observable<Doctor[]> {\r\n    const url = `${this.apiUrl}/doctors`; // Replace 'doctors' with your doctors endpoint\r\n    return this.http.get<Doctor[]>(url);\r\n  }\r\n\r\n  createPrescription(prescriptionData: Prescription): Observable<Prescription> {\r\n    return this.http.post<Prescription>(`${this.apiUrl}/prescriptions`, prescriptionData);\r\n  }\r\n\r\n  getPrescriptionsByPatientName(patientName: string): Observable<any> {\r\n    const url = `${this.apiUrl}/prescriptions/patient/name/${patientName}`;\r\n    return this.http.get(url);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,MAGaA,mBAAmB;EAG9BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,uBAAuB;EAED;EAEvCC,WAAWA,CAAA;IACT,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAW,CAAC,CAAC;IACvC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACtC;EAEAE,UAAUA,CAAA;IACR,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC,CAAC;IACtC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAWD,GAAG,CAAC;EACrC;EAEAG,kBAAkBA,CAACC,gBAA8B;IAC/C,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAe,GAAG,IAAI,CAACP,MAAM,gBAAgB,EAAEM,gBAAgB,CAAC;EACvF;EAEAE,6BAA6BA,CAACC,WAAmB;IAC/C,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,+BAA+BS,WAAW,EAAE;IACtE,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAACD,GAAG,CAAC;EAC3B;;AAtBWL,mBAAmB,C;mBAAnBA,mBAAmB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAnBhB,mBAAmB,C;SAAnBA,mBAAmB;EAAAiB,OAAA,EAAnBjB,mBAAmB,CAAAkB,IAAA;EAAAC,UAAA,EAFlB;AAAM;SAEPnB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}